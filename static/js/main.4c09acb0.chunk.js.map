{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.jsx","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","onChangeHandler","event","target","value","name","setState","this","onSubmit","preventDefault","props","onAdd","type","placeholder","onChange","required","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"+xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,kBCrBGK,G,MAAb,4MACEC,MAAQ,CACNhB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,IANZ,EASEG,gBAAkB,SAACC,GACjB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAEf,EAAKC,SAAL,eAAiBD,EAAOD,KAZ5B,4CAeE,WAAU,IAAD,OACP,EAMIG,KAAKP,MALPhB,EADF,EACEA,MACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,QACAW,EALF,EAKEA,OAGF,OACE,0BACEU,SAAU,SAACN,GACTA,EAAMO,iBACN,EAAKC,MAAMC,MAAX,eAAsB,EAAKX,QAC3B,EAAKM,SAAS,CACZtB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,OAIZ,2BACEc,KAAK,OACLxB,UAAU,QACViB,KAAK,QACLD,MAAOpB,EACP6B,YAAY,cACZC,SAAUP,KAAKN,gBACfc,UAAQ,IAEV,6BACA,8BACEH,KAAK,OACLxB,UAAU,iBACViB,KAAK,cACLD,MAAOnB,EACP4B,YAAY,oBACZC,SAAUP,KAAKN,gBACfc,UAAQ,IAEV,6BACA,2BACEH,KAAK,OACLxB,UAAU,QACViB,KAAK,SACLD,MAAOlB,EACP2B,YAAY,eACZC,SAAUP,KAAKN,gBACfc,UAAQ,IAEV,6BACA,2BACEH,KAAK,OACLxB,UAAU,QACViB,KAAK,UACLD,MAAOjB,EACP0B,YAAY,gBACZC,SAAUP,KAAKN,gBACfc,UAAQ,IAEV,6BACA,2BACEH,KAAK,OACLxB,UAAU,QACViB,KAAK,SACLD,MAAON,EACPe,YAAY,eACZC,SAAUP,KAAKN,gBACfc,UAAQ,IAEV,6BACA,4BACEH,KAAK,SACLxB,UAAU,cAFZ,eAxFR,GAA8B4B,c,OCCjBC,EAAb,4MACEjB,MAAQ,CACNN,OAAQwB,GAFZ,EAKEC,SAAW,SAACvB,GACV,EAAKU,UAAS,SAAAN,GAAK,MAAK,CACtBN,OAAO,GAAD,mBACDM,EAAMN,QADL,CAEJE,SATR,4CAcE,WACE,IAAQF,EAAWa,KAAKP,MAAhBN,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUuB,MAAOJ,KAAKY,iBAvBhC,GAAyBH,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4c09acb0.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieCard.scss';\r\n\r\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nMovieCard.defaultProps = {\r\n  description: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './MoviesList.scss';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({ movies }) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      description: PropTypes.string,\r\n      imgUrl: PropTypes.string.isRequired,\r\n      imdbUrl: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nMoviesList.defaultProps = {\r\n  movies: [],\r\n};\r\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\n\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  onChangeHandler = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    return (\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          this.props.onAdd({ ...this.state });\n          this.setState({\n            title: '',\n            description: '',\n            imgUrl: '',\n            imdbUrl: '',\n            imdbId: '',\n          });\n        }}\n      >\n        <input\n          type=\"text\"\n          className=\"input\"\n          name=\"title\"\n          value={title}\n          placeholder=\"Movie title\"\n          onChange={this.onChangeHandler}\n          required\n        />\n        <br />\n        <textarea\n          type=\"text\"\n          className=\"input textarea\"\n          name=\"description\"\n          value={description}\n          placeholder=\"Movie description\"\n          onChange={this.onChangeHandler}\n          required\n        />\n        <br />\n        <input\n          type=\"text\"\n          className=\"input\"\n          name=\"imgUrl\"\n          value={imgUrl}\n          placeholder=\"Movie imgUrl\"\n          onChange={this.onChangeHandler}\n          required\n        />\n        <br />\n        <input\n          type=\"text\"\n          className=\"input\"\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          placeholder=\"Movie imdbUrl\"\n          onChange={this.onChangeHandler}\n          required\n        />\n        <br />\n        <input\n          type=\"text\"\n          className=\"input\"\n          name=\"imdbId\"\n          value={imdbId}\n          placeholder=\"Movie ImdbId\"\n          onChange={this.onChangeHandler}\n          required\n        />\n        <br />\n        <button\n          type=\"submit\"\n          className=\"submit-btn\"\n        >\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: propTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}